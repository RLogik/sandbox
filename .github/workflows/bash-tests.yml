name: Bash tests
on:
  workflow_dispatch:
    inputs:
      trigger:
        description: 'Set this to call the runner'
        default:     'on'
        required:    true
jobs:
  job1:
    runs-on: ubuntu-latest
    env:
      colour: Red
    steps:
    - uses: actions/checkout@v2
      with:
        ref: master
    - name: Test environment
      run: echo ${{ env.colour }}
    - name: Check current path
      run: pwd
    - name: Check what files exist
      run: ls
    - name: Grant execution rights
      run: chmod +x scripts/*.sh
    - name: Display version
      run: ./scripts/build.sh --mode version
    - name: Check if artefact exists before creation
      run: |-
        ls;
        ls dist/*;
        [ -f dist/artefact.txt ] && echo "artefact exists" || echo "artefact does not exists";
    - name: Create text artefact
      run: ./scripts/build.sh --mode dist-text
    - name: Check if artefact created
      run: |-
        ls;
        ls dist/*;
        [ -f dist/artefact.txt ] && echo "artefact exists" || echo "artefact does not exists";
    - name: Upload artefact
      uses: actions/upload-artifact@v2
      with:
        name: text_artefact
        path: dist/artefact.txt
  job2a:
    runs-on: ubuntu-latest
    needs: job1
    env:
      artefact_path: new_path2a
      fname: artefact.txt
    steps:
    - name: Download artefact
      uses: actions/download-artifact@v2
      with:
        name: text_artefact
        path: ${{ env.artefact_path }}
    - name: Check that artefact downloaded
      run: |-
        ls;
        ls ${{ env.artefact_path }}/*;
        ! [ -f ${{ env.artefact_path }}/${{ env.fname }} ] && echo "artefact not downloaded!" && exit 1
    - name: Check content of artefact
      run: cat ${{ env.artefact_path }}
    - name: Update artefact
      run: |-
        echo "new content" >| ${{ env.artefact_path }}/${{ env.fname }}
    - name: Check content of artefact
      run: cat ${{ env.artefact_path }}/${{ env.fname }}
    - name: Reupload artefact
      uses: actions/upload-artifact@v2
      with:
        name: text_artefact
        path: ${{ env.artefact_path }}/${{ env.fname }}
  job2b:
    runs-on: ubuntu-latest
    needs: job2a
    env:
      artefact_path: new_path2b
      fname: artefact.txt
    steps:
    - name: Download artefact
      uses: actions/download-artifact@v2
      with:
        name: text_artefact
        path: ${{ env.artefact_path }}
    - name: Check that artefact downloaded
      run: |-
        ls;
        ls ${{ env.artefact_path }}/*;
        ! [ -f ${{ env.artefact_path }}/${{ env.fname }} ] && echo "artefact not downloaded!" && exit 1
    - name: Check content of artefact
      run: cat ${{ env.artefact_path }}/${{ env.fname }}
  job3:
    runs-on: ubuntu-latest
    needs: job1
    env:
      artefact_path: new_path3
      fname: artefact.txt
    steps:
    - name: Download artefact
      uses: actions/download-artifact@v2
      with:
        name: text_artefact
        path: ${{ env.artefact_path }}
    - name: Check that artefact downloaded
      run: |-
        ls;
        ls ${{ env.artefact_path }}/*;
        ! [ -f ${{ env.artefact_path }}/${{ env.fname }} ] && echo "artefact not downloaded!" && exit 1
    - name: Check content of artefact
      run: cat ${{ env.artefact_path }}/${{ env.fname }}
